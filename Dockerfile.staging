# docker/php-fpm/Dockerfile
FROM php:8.0.3-fpm-alpine3.13

ENV DEBIAN_FRONTEND noninteractive

RUN apk add tzdata && cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \
    && echo "Asia/Tokyo" >  /etc/timezone

# Install nginx
RUN apk add nginx

RUN apk upgrade --update && apk --no-cache add git libzip-dev zip unzip autoconf gcc g++ make supervisor \
    freetype-dev libjpeg libjpeg-turbo-dev libpng-dev pcre-dev \
    && apk add --no-cache --virtual .build-deps \
        make \
        gcc \
        g++ \
    && curl -SL http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.15.tar.gz | tar -xz -C ~/ \
    && rm /usr/bin/iconv \
    && mv ~/libiconv-1.15 ~/libiconv \
    && ~/libiconv/configure --prefix=/usr/bin \
    && make \
    && make install \
    && rm -Rf ~/libiconv \
    && apk del .build-deps

# Install OpenSSH and set the password for root to "Docker!". In this example, "apk add" is the install instruction for an Alpine Linux-based image.
RUN apk add openssh \
    && echo "root:Docker!" | chpasswd

ENV LD_PRELOAD /usr/bin/lib/preloadable_libiconv.so

COPY sshd_config /etc/ssh/

RUN docker-php-ext-install zip pdo_mysql opcache exif pcntl
RUN docker-php-ext-configure gd --with-freetype --with-jpeg
RUN docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) gd

RUN pecl install redis && \
    docker-php-ext-enable redis

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer

# cron
ADD ./docker/php-fpm/laravel-cron /etc/cron.d/laravel-cron
RUN chmod 0644 /etc/cron.d/laravel-cron
RUN crontab /etc/cron.d/laravel-cron

RUN { \
    echo 'upload_max_filesize = 100M'; \
    echo 'post_max_size = 108M'; \
    echo 'short_open_tag = On'; \
    echo 'fastcgi.logging = 1'; \
    echo 'opcache.enable=1'; \
    echo 'opcache.enable_cli=1'; \
    echo 'opcache.optimization_level=0x7FFFBBFF'; \
    echo 'opcache.validate_timestamps=1'; \
    echo 'opcache.memory_consumption=128'; \
    echo 'opcache.interned_strings_buffer=8'; \
    echo 'opcache.max_accelerated_files=50000'; \
    echo 'opcache.revalidate_freq=60'; \
    echo 'opcache.fast_shutdown=1'; \
    echo 'xdebug.remote_enable=1'; \
} > /usr/local/etc/php/conf.d/overrides.ini

COPY . /var/www
# COPY .env.staging /var/www/.env

# Add configuration
COPY ./docker/default.conf.staging /etc/nginx/conf.d/default.conf
COPY ./docker/supervisord.conf.staging /etc/supervisor/conf.d/supervisord.conf
COPY ./docker/nginx/.htpasswd /etc/nginx/.htpasswd

ADD ./docker/php-fpm/startup-staging.sh /opt/startup.sh
RUN sed -i 's/\r//g' /opt/startup.sh

RUN mkdir -p /run/nginx

WORKDIR /var/www

# RUN composer install --optimize-autoloader --no-dev
RUN composer install
# RUN php artisan key:generate
RUN chmod -R a+w storage/ bootstrap/cache

EXPOSE 80 2222

CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
